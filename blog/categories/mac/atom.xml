<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | 末日前几天]]></title>
  <link href="http://leolovenet.com/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://leolovenet.com/"/>
  <updated>2014-02-11T23:20:46+08:00</updated>
  <id>http://leolovenet.com/</id>
  <author>
    <name><![CDATA[leolovenet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Ruby增强ping命令]]></title>
    <link href="http://leolovenet.com/blog/2013/10/11/enhanced-ping-command-function-with-ruby/"/>
    <updated>2013-10-11T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/10/11/enhanced-ping-command-function-with-ruby</id>
    <content type="html"><![CDATA[<p>故事的起因是,我在mac下一直用chrome,但是chrome有一个很不爽的地方,是在地址栏copy的域名,每次都自动的加上<code>http://</code>的字符串, 这样就没有办法直接粘贴到 Terminal, 用ping命令查看ping值. 这个事情真的弄的我很头疼.</p>

<p>所以就想办法关掉这个chrome的特性,google了半天也也没有找到,就放弃了.如果有人知道告诉我,十分感谢 :)</p>

<p>转而想可不可以增加 ping 的功能呢? 让ping可以支持有<code>http://</code>的域名.</p>

<p>正好,最近再看ruby的一些东西,感觉蛮方便的.就写了一个ruby脚本,可以自动的去掉http之类的协议头,然后传给ping命令执行.不就ok了嘛.</p>

<p>写出来之后,又不爽不能及时的知道ip的地理位置,所以呢,就又增加了调用纯真的ip数据库,顺便把ip的地理位置信息现实出来.</p>

<p>第一步,安装所需要的依赖库,qqwry.dat自己下载,然后改脚本里的路径信息.</p>

<p><code>
gem install escape qqwry
</code>
下面的代码我是另存为一个叫p的文件,放到了 <code>$home/bin/</code> 下面.
``` ruby</p>

<h1>!/usr/bin/env ruby</h1>

<h1>encoding : utf-8</h1>

<p>require &ldquo;escape&rdquo;
require &ldquo;uri&rdquo;
require &lsquo;qqwry&rsquo;
require &lsquo;resolv&rsquo;</p>

<p>unless ARGV.length == 1
  puts &ldquo;Usage: p <domain>\n&rdquo;
  exit
end</p>

<p>domain=ARGV[0].dup</p>

<p>if domain[0..3] != &ldquo;http&rdquo;
   domain.insert(0,&lsquo;<a href="http://">http://</a>&rsquo;)
end
host=URI.parse(&ldquo;#{domain}&rdquo;).host
ip=Resolv.getaddress host</p>

<p>db = QQWry::Database.new(&lsquo;/Users/yourname/Documents/vbox/ip/qqwry.dat&rsquo;)
r = db.query(ip)</p>

<p>puts &ldquo;&rdquo;
puts &ldquo;#{host}\t===>\t#{ip}\t===>\t#{r.country} #{r.area}&rdquo;
puts &ldquo;&rdquo;
exec &ldquo;ping #{host}&rdquo;
```</p>

<p>使用方法:
<code>
p http://www.google.com
</code>
脚本虽然很简单,但是用起来感觉很好.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的Evernote笔记]]></title>
    <link href="http://leolovenet.com/blog/2013/10/07/my-sharing-notes/"/>
    <updated>2013-10-07T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/10/07/my-sharing-notes</id>
    <content type="html"><![CDATA[<p>最近发生了很多事情,刚刚从未来的丈母娘那里回来.</p>

<p>没有什么主要的技术文章,就发一些自己平时积累的Evernote的笔记.</p>

<blockquote><p>★★★★ <a href="https://www.evernote.com/shard/s170/sh/901e7847-78f3-4560-ae64-72825f8f5c45/b43546d281d47bbbdc745184e83f1fad">一些常用的linux的命令</a></p>

<p>★★★ <a href="https://www.evernote.com/shard/s170/sh/d59d27d3-2341-4982-a78f-fe3d61b2d081/628d18b1f6c66b14a33cb89dc39266b2">虚拟机开发环境的搭建利器vagrant</a>
vagrant是一个创建和分发虚拟化开发环境的工具，使用ruby编写，基于Oracle的VirtualBox，它提供了一个可配置的、轻量级的、可重用的、便携的虚拟化开发环境.</p>

<p>★★ <a href="https://www.evernote.com/shard/s170/sh/5ee87faa-0c73-46a6-9cd1-7117ee8971ea/4bbf353bae719e4ef65e2b57530732a1">Git的学习笔记</a></p>

<p>★★ <a href="https://www.evernote.com/shard/s170/sh/c6fa9447-727c-474a-b75d-4492b5764f08/cd5ee8ca706b35bbc969e5205964bbd3">Pow 相关笔记</a>
Pow是一个Rack Server for Mac OS X.</p>

<p>★★★ <a href="https://www.evernote.com/shard/s170/sh/d408e6c7-c997-4fc1-b4ae-97f20445e491/424b9f322830d7debaeb976ed870ff7d">读Postfix权威指南笔记</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 快捷键收集整理]]></title>
    <link href="http://leolovenet.com/blog/2013/01/28/xcode-keyboard-shortcuts/"/>
    <updated>2013-01-28T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/01/28/xcode-keyboard-shortcuts</id>
    <content type="html"><![CDATA[<p>最近工作比较忙,没有什么时间学习ios,用xcode的时间就更少了,所以以前记得那些快捷键现在都有些生疏,今天又学习了几个,想到整理一下,以后遇到更多的再慢慢添加,慢慢完善.<br/>
以下是感觉经常用到的很有用的一些:</p>

<pre>
鼠标三击     选中当前行
⌘+/  当前行添加注视符//
⌘+shift+1  打开welecome to Xcode窗口
⌘+shift+2  打开Organizer窗口
选中方法后按control+option+⌘+/  迅速在Organizer-Documentation中查看帮助信息
⌘+~ 再主窗口与Documentation之间切换我经常用到的
option+鼠标左击 迅速查看简短帮助信息
⌘+鼠标左击 定位到方法或属性声明的位置
⌘+0  隐藏、显示Utilities区域
⌘+option+0 现实、隐藏Navigator区域

⌘+]  代码向右缩进
⌘+[  代码向左缩进
option+⌘+[ 向上移动行
option+⌘+] 向下移动行

Ctrl+a 去行首
Ctrl+k 删除到行尾
Ctrl+a+k+k  删除当前行

鼠标双指再触摸板来回滑动可以来回切换编辑的文件或者
Ctrl+⌘+Left/Right  在文件编辑器中前进或者后退 
Ctrl+⌘+Up/Down  在.h与.m文件之间切换
⌘+\  添加、删除断点

⌘+R 编译运行
</pre>

]]></content>
  </entry>
  
</feed>
