<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | 末日前几天]]></title>
  <link href="http://leolovenet.com/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://leolovenet.com/"/>
  <updated>2014-02-18T17:51:56+08:00</updated>
  <id>http://leolovenet.com/</id>
  <author>
    <name><![CDATA[leolovenet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Ruby增强ping命令]]></title>
    <link href="http://leolovenet.com/blog/2013/10/11/enhanced-ping-command-function-with-ruby/"/>
    <updated>2013-10-11T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/10/11/enhanced-ping-command-function-with-ruby</id>
    <content type="html"><![CDATA[<p>故事的起因是,我在mac下一直用chrome,但是chrome有一个很不爽的地方,是在地址栏copy的域名,每次都自动的加上<code>http://</code>的字符串, 这样就没有办法直接粘贴到 Terminal, 用ping命令查看ping值. 这个事情真的弄的我很头疼.</p>

<p>所以就想办法关掉这个chrome的特性,google了半天也也没有找到,就放弃了.如果有人知道告诉我,十分感谢 :)</p>

<p>转而想可不可以增加 ping 的功能呢? 让ping可以支持有<code>http://</code>的域名.</p>

<p>正好,最近再看ruby的一些东西,感觉蛮方便的.就写了一个ruby脚本,可以自动的去掉http之类的协议头,然后传给ping命令执行.不就ok了嘛.</p>

<p>写出来之后,又不爽不能及时的知道ip的地理位置,所以呢,就又增加了调用纯真的ip数据库,顺便把ip的地理位置信息现实出来.</p>

<p>第一步,安装所需要的依赖库,qqwry.dat自己下载,然后改脚本里的路径信息.</p>

<p><code>
gem install escape qqwry
</code>
下面的代码我是另存为一个叫p的文件,放到了 <code>$home/bin/</code> 下面.
``` ruby</p>

<h1>!/usr/bin/env ruby</h1>

<h1>encoding : utf-8</h1>

<p>require &ldquo;escape&rdquo;
require &ldquo;uri&rdquo;
require &lsquo;qqwry&rsquo;
require &lsquo;resolv&rsquo;</p>

<p>unless ARGV.length == 1
  puts &ldquo;Usage: p <domain>\n&rdquo;
  exit
end</p>

<p>domain=ARGV[0].dup</p>

<p>if domain[0..3] != &ldquo;http&rdquo;
   domain.insert(0,&lsquo;<a href="http://">http://</a>&rsquo;)
end
host=URI.parse(&ldquo;#{domain}&rdquo;).host
ip=Resolv.getaddress host</p>

<p>db = QQWry::Database.new(&lsquo;/Users/yourname/Documents/vbox/ip/qqwry.dat&rsquo;)
r = db.query(ip)</p>

<p>puts &ldquo;&rdquo;
puts &ldquo;#{host}\t===>\t#{ip}\t===>\t#{r.country} #{r.area}&rdquo;
puts &ldquo;&rdquo;
exec &ldquo;ping #{host}&rdquo;
```</p>

<p>使用方法:
<code>
p http://www.google.com
</code>
脚本虽然很简单,但是用起来感觉很好.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的Evernote笔记]]></title>
    <link href="http://leolovenet.com/blog/2013/10/07/my-sharing-notes/"/>
    <updated>2013-10-07T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/10/07/my-sharing-notes</id>
    <content type="html"><![CDATA[<p>最近发生了很多事情,刚刚从未来的丈母娘那里回来.</p>

<p>没有什么主要的技术文章,就发一些自己平时积累的Evernote的笔记.</p>

<blockquote><p>★★★★ <a href="https://www.evernote.com/shard/s170/sh/901e7847-78f3-4560-ae64-72825f8f5c45/b43546d281d47bbbdc745184e83f1fad">一些常用的linux的命令</a></p>

<p>★★★ <a href="https://www.evernote.com/shard/s170/sh/d59d27d3-2341-4982-a78f-fe3d61b2d081/628d18b1f6c66b14a33cb89dc39266b2">虚拟机开发环境的搭建利器vagrant</a>
vagrant是一个创建和分发虚拟化开发环境的工具，使用ruby编写，基于Oracle的VirtualBox，它提供了一个可配置的、轻量级的、可重用的、便携的虚拟化开发环境.</p>

<p>★★★ <a href="https://www.evernote.com/shard/s170/sh/5ee87faa-0c73-46a6-9cd1-7117ee8971ea/4bbf353bae719e4ef65e2b57530732a1">Git的学习笔记</a></p>

<p>★★ <a href="https://www.evernote.com/shard/s170/sh/c6fa9447-727c-474a-b75d-4492b5764f08/cd5ee8ca706b35bbc969e5205964bbd3">Pow 相关笔记</a>
Pow是一个Rack Server for Mac OS X.</p>

<p>★★★ <a href="https://www.evernote.com/shard/s170/sh/d408e6c7-c997-4fc1-b4ae-97f20445e491/424b9f322830d7debaeb976ed870ff7d">读Postfix权威指南笔记</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 快捷键收集整理]]></title>
    <link href="http://leolovenet.com/blog/2013/01/28/xcode-keyboard-shortcuts/"/>
    <updated>2013-01-28T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/01/28/xcode-keyboard-shortcuts</id>
    <content type="html"><![CDATA[<p>最近工作比较忙,没有什么时间学习ios,用xcode的时间就更少了,所以以前记得那些快捷键现在都有些生疏,今天又学习了几个,想到整理一下,以后遇到更多的再慢慢添加,慢慢完善.<br/>
以下是感觉经常用到的很有用的一些:</p>

<pre>
鼠标三击     选中当前行
⌘+/  当前行添加注视符//
⌘+shift+1  打开welecome to Xcode窗口
⌘+shift+2  打开Organizer窗口
选中方法后按control+option+⌘+/  迅速在Organizer-Documentation中查看帮助信息
⌘+~ 再主窗口与Documentation之间切换我经常用到的
option+鼠标左击 迅速查看简短帮助信息
⌘+鼠标左击 定位到方法或属性声明的位置
⌘+0  隐藏、显示Utilities区域
⌘+option+0 现实、隐藏Navigator区域

⌘+]  代码向右缩进
⌘+[  代码向左缩进
option+⌘+[ 向上移动行
option+⌘+] 向下移动行

Ctrl+a 去行首
Ctrl+k 删除到行尾
Ctrl+a+k+k  删除当前行

鼠标双指再触摸板来回滑动可以来回切换编辑的文件或者
Ctrl+⌘+Left/Right  在文件编辑器中前进或者后退 
Ctrl+⌘+Up/Down  在.h与.m文件之间切换
⌘+\  添加、删除断点

⌘+R 编译运行
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 下的 Open命令]]></title>
    <link href="http://leolovenet.com/blog/2013/01/25/the-open-command/"/>
    <updated>2013-01-25T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/01/25/the-open-command</id>
    <content type="html"><![CDATA[<p>mac下的应用程序是一个有结构的目录(想在Finder下查看程序目录内容,可以在程序目录上右击选择 &ldquo;Show Package Contents&rdquo; 像下图一样).</p>

<p><img src="/downloads/images/open-command.png" title="open command example" alt="open-command.png" /></p>

<p>安装程序也是简单的把这个目录copy到你想要的地方就可以，大部分是 ~/Application 或者 /Application 下.</p>

<p>但想要在命令行下运行程序怎么办？你总不能在命令行下运行一个目录吧！</p>

<p>这个时候发现了<code>/usr/bin/open</code>命令,就是干这个的.</p>

<p>比如,我想在命令行下运行Firefox,运行下面的命令即可</p>

<p><code>bash
open -a /Applications/Firefox.app
</code></p>

<p>想在命令行下,用 Finder 打开此时的路径的话,运行下面的命令</p>

<p><code>bash
open ./
</code>
想要用系统默认程序打开响应的文件,运行下面的命令</p>

<p><code>bash
open Readme.md
</code></p>

<p>open命令的其他参数:</p>

<pre>
/usr/bin/open --help
open: unrecognized option `--help'
Usage: open [-e] [-t] [-f] [-W] [-R] [-n] [-g] [-h] [-b &lt;bundle identifier>] [-a &lt;application>] [filenames] [--args arguments]
Help: Open opens files from a shell.
      By default, opens each file using the default application for that file.  
      If the file is in the form of a URL, the file will be opened as a URL.
Options: 
      -a                Opens with the specified application.
      -b                Opens with the specified application bundle identifier.
      -e                Opens with TextEdit.
      -t                Opens with default text editor.
      -f                Reads input from standard input and opens with TextEdit.
      -F  --fresh       Launches the app fresh, that is, without restoring windows. Saved persistent state is lost, excluding Untitled documents.
      -R, --reveal      Selects in the Finder instead of opening.
      -W, --wait-apps   Blocks until the used applications are closed (even if they were already running).
          --args        All remaining arguments are passed in argv to the application's main() function instead of opened.
      -n, --new         Open a new instance of the application even if one is already running.
      -j, --hide        Launches the app hidden.
      -g, --background  Does not bring the application to the foreground.
      -h, --header      Searches header file locations for headers matching the given filenames, and opens them.
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使终端(iTerm2/Terminal)色彩缤纷]]></title>
    <link href="http://leolovenet.com/blog/2013/01/12/colorful-the-Terminal/"/>
    <updated>2013-01-12T00:00:00+08:00</updated>
    <id>http://leolovenet.com/blog/2013/01/12/colorful-the-Terminal</id>
    <content type="html"><![CDATA[<p>因为经常使用终端 (iTerm|Terminal) ssh到服务器上去,所以整日盯着黑乎乎的屏幕很头痛,还不利于眼睛,所谓“工欲善其事,必先利其器”,所以今天就想让终端也色彩缤纷起来,让我们锻炼眼睛识别颜色的能力吧.</p>

<p><img src="/downloads/images/terminal-colorful.png" title="terminal colorful example" alt="terminal-colorful.png" /></p>

<!--more-->


<p>在git上找到了<a href="http://ethanschoonover.com/solarized" target="_blank">SOLARIZED</a>这个项目,可以配置很多很多程序的颜色主体哦,哈哈,很是激动,下面具体讲讲配置过程.</p>

<p>我的机器主要用到iTerm2,而服务器因为是CentOS,那就要用到<a href="https://github.com/seebi/dircolors-solarized" target="_blank">dircolors-solarized</a>子项目.</p>

<p>首先讲一下, CentOS 下的ls配置  Solarized Color Theme for GNU ls (as setup by GNU dircolors).</p>

<p>Linux下的 <code>ls --color=auto</code> 命令,其实是根据两个文件来显示颜色的, <code>/etc/DIR_COLORS</code> 或者 <code>~/.dir_colors</code>, 一个是系统级别的配置文件,一个用户级别的配置文件.</p>

<p>Solarized Color Theme for GNU ls项目提供了配置好了的颜色配置文件,并且可以根据文件类型来展示不同的颜色,可以看看我上面的实例图片,色彩缤纷吧.</p>

<p>我就不讲Terminal的 16-色 和 256-色 的差别了,因为我也一知半解.不过这个项目的<a href="https://github.com/seebi/dircolors-solarized/raw/master/dircolors.ansi-universal" target="_blank">dircolors.ansi-universal</a>配置文件可以工作在两种形式的终端下,而<a href="https://github.com/seebi/dircolors-solarized/raw/master/dircolors.256dark" target="_blank">dircolors.256dark</a>只能工作在265色的终端下,所以除非你知道自己的终端是支持265色的,不然还是下载<a href="https://github.com/seebi/dircolors-solarized/raw/master/dircolors.ansi-universal" target="_blank">dircolors.ansi-universal</a>.</p>

<p>下面是具体命令</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>[execute below script in terminal]  (terminal_colorful.sh)</span> <a href='/downloads/code/terminal_colorful.sh'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span> ~
</span><span class='line'><span class="nv">WGET_CMD</span><span class="o">=</span><span class="k">$(</span><span class="nb">type</span> -P wget<span class="k">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="nv">$WGET_CMD</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span> <span class="o">]</span>;<span class="k">then</span>
</span><span class='line'><span class="k">     </span>yum -y install wget
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>wget http://leolovenet.com/downloads/code/dircolors
</span><span class='line'><span class="c">#or</span>
</span><span class='line'><span class="c">#wget --no-check-certificate https://github.com/seebi/dircolors-solarized/raw/master/dircolors.ansi-universal</span>
</span><span class='line'>
</span><span class='line'>mv dircolors  ~/.dir_colors
</span><span class='line'><span class="nb">eval</span> <span class="sb">`</span>dircolors ~/.dir_colors<span class="sb">`</span>
</span><span class='line'>cat &gt;&gt;  ~/.bashrc <span class="s">&lt;&lt;END</span>
</span><span class='line'><span class="s">########bash color######################</span>
</span><span class='line'><span class="s">if [ -x /usr/bin/dircolors ]; then</span>
</span><span class='line'><span class="s">    alias ls=&#39;ls --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias dir=&#39;dir --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias vdir=&#39;vdir --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias grep=&#39;grep --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias fgrep=&#39;fgrep --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias egrep=&#39;egrep --color=auto&#39;</span>
</span><span class='line'><span class="s">    alias tree=&#39;tree -C&#39;</span>
</span><span class='line'><span class="s">fi</span>
</span><span class='line'><span class="s">alias ..=&quot;cd ..&quot;</span>
</span><span class='line'><span class="s">alias ..2=&quot;cd ../..&quot;</span>
</span><span class='line'><span class="s">alias ..3=&quot;cd ../../..&quot;</span>
</span><span class='line'><span class="s">alias ..4=&quot;cd ../../../..&quot;</span>
</span><span class='line'><span class="s">alias ..5=&quot;cd ../../../../..&quot;</span>
</span><span class='line'><span class="s">alias  &quot;l&quot;=&quot;ls -ahl --full-time&quot;</span>
</span><span class='line'><span class="s">########################################</span>
</span><span class='line'><span class="s">END</span>
</span><span class='line'><span class="nb">source</span> ~/.bashrc
</span><span class='line'>ls /
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>该项目的<a href="https://github.com/seebi/dircolors-solarized/blob/master/README.md">ReadMe</a>文件还有很多信息,比如怎样配置265色的终端,感兴趣的可以仔细看看.</p>

<p><strong>iTerm2的配置</strong></p>

<p>iTerm2的配置配置更简单一点,进入到<a href="https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized" target="_blank">iTerm2</a>的配置子项目下,下载配置文件<a href="https://github.com/altercation/solarized/raw/master/iterm2-colors-solarized/Solarized%20Dark.itermcolors" target="_blank">Solarized Dark.itermcolors</a>或者<a href="https://github.com/altercation/solarized/raw/master/iterm2-colors-solarized/Solarized%20Light.itermcolors" target="_blank">Solarized Light.itermcolors</a>,双击导入,然后更改首选项选择主题就可以.<br/>
具体可以查看<a href="https://github.com/altercation/solarized/blob/master/iterm2-colors-solarized/README.md" target="_blank">ReadMe</a>文件.</p>

<p>这里需要补充一点的是,mac 下的ls命令不是gun ls,所以即使iterm2安装了颜色主题,敲入ls命令以后,显示的文件颜色还是有问题的,这里有一个补救办法,运行下面这行,之后再看ls命令的颜色是不是变了</p>

<p><code>bash
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD
</code></p>

<p>但是,这种补救办法也不完美,比如不能根据文件类型来显示颜色.</p>

<p>如果你想追求完美的话,还有另外一种办法,就是用 <code>brew install coreutils</code>, 安装 gun ls 命令到 mac 下,到时你还需要跟上面在linux下操作的一样,下载配置文件,放入到 ~/.dir_colors</p>

<p>具体就不说了,累了,睡觉了.</p>
]]></content>
  </entry>
  
</feed>
